---
---

<button id="theme-toggle" class="w-8 h-8 -mr-2 flex items-center justify-center" aria-label="Change color scheme">
    <svg class="sun-icon w-5 h-5 stroke-current hidden" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18Z" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
        <path d="M22 12L23 12" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
        <path d="M12 2V1" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
        <path d="M12 23V22" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
        <path d="M20 20L19 19" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
        <path d="M20 4L19 5" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
        <path d="M4 20L5 19" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
        <path d="M4 4L5 5" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
        <path d="M1 12L2 12" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
    </svg>
    <svg class="moon-icon w-5 h-5 stroke-current hidden" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M3 11.5066C3 16.7497 7.25034 21 12.4934 21C16.2209 21 19.4466 18.8518 21 15.7259C12.4934 15.7259 8.27411 11.5066 8.27411 3C5.14821 4.55344 3 7.77915 3 11.5066Z" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
    </svg>
</button>

<script>
    document.addEventListener('astro:page-load', () => {
        const theme = (() => {
            if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
                return localStorage.getItem('theme') || 'light';
            }
            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                return 'dark';
            }
            return 'light';
        })();

        if (theme === 'light') {
            document.documentElement.classList.remove('dark');
        } else {
            document.documentElement.classList.add('dark');
        }

        const handleToggleClick = () => {
            const element = document.documentElement;
            element.classList.toggle('dark');

            const isDark = element.classList.contains('dark');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
            updateIcon(isDark);
        };

        const updateIcon = (isDark) => {
            const sunIcon = document.querySelector('.sun-icon');
            const moonIcon = document.querySelector('.moon-icon');
            if (isDark) {
                sunIcon.classList.remove('hidden');
                moonIcon.classList.add('hidden');
            } else {
                sunIcon.classList.add('hidden');
                moonIcon.classList.remove('hidden');
            }
        };

        // Set initial icon state
        updateIcon(theme === 'dark');

        document.getElementById('theme-toggle')?.addEventListener('click', handleToggleClick);
    });
</script>

<script>
    document.addEventListener('astro:after-swap', () => {
        const isDark = localStorage.theme === 'dark';
        if (isDark) {
            document.documentElement.classList.add('dark');
        }
        // Update icon state after view transitions
        const sunIcon = document.querySelector('.sun-icon');
        const moonIcon = document.querySelector('.moon-icon');
        if (isDark) {
            sunIcon.classList.remove('hidden');
            moonIcon.classList.add('hidden');
        } else {
            sunIcon.classList.add('hidden');
            moonIcon.classList.remove('hidden');
        }
    });
</script>
